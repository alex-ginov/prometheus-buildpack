<<<<<<< HEAD
global:
  scrape_interval:     <%= ENV["PROMETHEUS_GLOBAL_SCRAPE_INTERVAL"] || "1m" %>
  evaluation_interval: <%= ENV["PROMETHEUS_GLOBAL_EVALUATION_INTERVAL"] || "1m" %>

scrape_configs:
# Get Prometheus self-metrics
- job_name: "prometheus"
  basic_auth:
    username: "<%= ENV["BASIC_AUTH_USERNAME"] %>"
    password: "<%= ENV["BASIC_AUTH_PASSWORD"] %>"
  static_configs:
    - targets: ["<%= ENV["CANONICAL_HOST"] %>"]

# Get user-defined metrics
=======
# Configuration globale
global:
  scrape_interval:     <%= ENV["PROMETHEUS_GLOBAL_SCRAPE_INTERVAL"] || "30s" %>
  scrape_timeout:      <%= ENV["PROMETHEUS_SCRAPE_TIMEOUT"] || "10s" %>
  evaluation_interval: <%= ENV["PROMETHEUS_GLOBAL_EVALUATION_INTERVAL"] || "30s" %>

# Configuration de l'interface web
web:
  # Activer l'authentification basique
  enable_admin_api: true
  page_title: "Prometheus - Tableau de bord de surveillance"
  # Chemin vers le fichier contenant les identifiants (sera généré dynamiquement)
  basic_auth_users: "/app/prometheus/web_auth.yml"

# Chargement des fichiers de règles
rule_files:
  <% rules_files.each do |rule_file| %>
  - /app/prometheus/<%= rule_file %>
  <% end %>

# Configuration pour l'envoi des données vers InfluxDB
remote_write:
  - url: "<%= ENV["INFLUXDB_URL"] || ENV["INFLUX_URL"] %>"
    basic_auth:
      username: "<%= ENV["INFLUX_USER"] %>"
      password: "<%= ENV["INFLUX_PASSWORD"] %>"
    remote_timeout: 30s

scrape_configs:
  # Métriques de Prometheus lui-même
  - job_name: "prometheus"
    basic_auth:
      username: "<%= ENV["BASIC_AUTH_USERNAME"] %>"
      password: "<%= ENV["BASIC_AUTH_PASSWORD"] %>"
    static_configs:
      - targets: ["<%= ENV["CANONICAL_HOST"] %>"]
    # Ajout de métadonnées pour faciliter le filtrage dans InfluxDB
    relabel_configs:
      - source_labels: [__address__]
        target_label: __metrics_path__
        replacement: /metrics
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)(?::\d+)?'
        replacement: '${1}'

<<<<<<< HEAD
  # Configuration pour l'exporter personnalisé Node.js
  - job_name: 'nodejs-app-metrics'
    scrape_interval: 30s
    scrape_timeout: 10s
    metrics_path: '/metrics'
    scheme: https
    static_configs:
      - targets: ['poc-logs-n8n.osc-fr1.scalingo.io']
        labels:
          app: 'nodejs-app'
          env: 'production'
          team: 'devops'
    tls_config:
      insecure_skip_verify: true  # À désactiver en production avec un vrai certificat
    relabel_configs:
      - source_labels: [__address__]
        target_label: __address__
        replacement: ${1}:443
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+)'
        replacement: '${1}'

# Configuration utilisateur supplémentaire
>>>>>>> scalingo/master
=======
# Get user-defined metrics
>>>>>>> origin/master
<%= scrape_configs.to_yaml.gsub("---\n", "") %>
